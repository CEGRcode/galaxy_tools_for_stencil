<tool id="post_nivo_table_and_plot_json_stencil" name="POST nivo table and plot in json format to stencil" version="1.0.0">
    <description></description>
    <command>

    <![CDATA[
        #import time
	#set non_ready_states = ['new', 'queued', 'running', 'setting_metadata', 'upload']
	#if str($input_format_option.input_format) == 'data':	    
            #set history_id = $__app__.security.encode_id($input.history.id)
            #set history_name = $input.history.name
	    #set job = $input.creating_job
            #set job_state = $job.state
	    #if $job_state == 'error':
                #set stderr = $job.stderr
            #else:
                #set stderr = ''
            #end if
            #set tool_id = $job.tool_id
            #set tool_parameters = ''
            #for $p in $job.parameters:
                #set tool_parameters = $tool_parameters + "__SeP__" + $p.name
                #set tool_parameters = $tool_parameters + "__SeP__" + $p.value
            #end for
            #set workflow_step = None
            #set pjaas = $job.post_job_actions
            #for pjaa in $pjaas:
                #set pja = pjaa.post_job_action
                #set workflow_step = $pja.workflow_step
            #end for
            python $__tool_directory__/post_nivo_table_and_plot_json_stencil.py
	    --config_file $__tool_directory__/post_stencil_config.ini
	    --input "$input_format_option.input"
	    --input_id "$__app__.security.encode_id($input.id)"
            --input_datatype "$input.ext"
            --input_post_type "$post_type"
            --dbkey "$input.metadata.dbkey"
            --history_id "$history_id"
            --history_name "$history_name"
            --stats_tool_id "post_nivo_json_stencil"
            --tool_id "$job.tool_id"
	    --layout_id "$stencil_layout_name"
	    --tabId "0"
	    --stepId "$stencil_stepId"
	    --user_email "$__user_email__"
            #if $workflow_step is not None:
                --workflow_step_id "$__app__.security.encode_id($workflow_step.id)"
	    #end if
	    --output "$output"
        #end if
        #if str($input_format_option.input_format) == 'list_data':
            #set history_id = None
            #set history_name = None
            #set stderr = ''
            #set tool_id = 'unknown'
            #set tool_parameters = ''
            #set workflow_step = None
	    #set a = 0
	    #set output_dir = $output.files_path
	    mkdir -p $output_dir
	    #for $i in $input_format_option.inputs
	        #if history_id is None:
                    #set history_id = $__app__.security.encode_id($i.history.id)
                    #set history_name = $i.history.name
                #end if
	        #set job = $i.creating_job
	        #set $a += 1
                #set job_state = $job.state
                #if $job_state == 'error':
                    #set stderr = $job.stderr
                #end if
                #set tool_id = $job.tool_id
                #set tool_parameters = ""
                #for $p in $job.parameters:
                    #set tool_parameters = $tool_parameters + "__SeP__" + $p.name
                    #set tool_parameters = $tool_parameters + "__SeP__" + $p.value
                #end for
                #if workflow_step is None:
                    #set pjaas = $job.post_job_actions
                    #for pjaa in $pjaas:
                        #set pja = pjaa.post_job_action
                        #set workflow_step = $pja.workflow_step
                    #end for
                #end if
                && python $__tool_directory__/post_nivo_table_and_plot_json_stencil.py
	        --config_file $__tool_directory__/post_stencil_config.ini
	        --input "$i"
	        --input_id "$__app__.security.encode_id($i.id)"
                --input_datatype "$i.ext"
                --input_plottype "$plottype"
                --dbkey "$i.metadata.dbkey"
                --history_id "$history_id"
                --history_name "$history_name"
                --stats_tool_id "post_static_plot_stencil"
	        --tool_id "$job.tool_id"
	        --layout_id "$stencil_layout_name"
	        --tabId "$a"
	        --stepId '$stencil_stepId'
	        --user_email "$__user_email__"
                #if $workflow_step is not None:
                    --workflow_step_id "$__app__.security.encode_id($workflow_step.id)"
	        #end if
		--output "$output_dir/$a"
                && cat $output_dir/$a >> $output 
	    #end for
	#end if
        ]]>
    </command>
    <inputs>
	<conditional name="input_format_option" >
        <param name="input_format" type="select" display="radio" label="Input as data or list of data. If you select list of data, plots will be displayed in different tabs in Stencil">
            <option value="data" selected="True">data</option>
            <option value="list_data" >List of data</option>
    </param>
    <when value="list_data">
	<param name="inputs" type="data_collection" collection_type="list" format="json" label="list of json files in Nivo format" />
</when>
     <when value="data" >
	<param name="input" type="data" format="json" label="json file in Nivo format" />
     </when>
    </conditional>
        <param name="post_type" type="select" label="Type of Nivo data like to be POST to Stencil">
            <option value="scatterPlot" selected="True">Scatter plot</option>
            <option value="linePlot" >Line plot</option>
            <option value="barchart" >Bar plot</option>
            <option value="heatMap" >Heat Map</option>
            <option value="table" >Table </option>
	</param>
        <param name="stencil_stepId"      type="integer" value="0"      label="Desired position of data or plot within tab in Stencil" />	
        <param name="stencil_layout_name"      type="text" value="sample layout"      label="Desired name of layout in Stencil" />

</inputs>
    <outputs>
        <data name="output" format="txt" />
    </outputs>
    <tests>
    </tests>
    <help>
**What it does**


A JSON dictionary containing the run, sample, url of the output and genome reference is sent via a POST
to the STENCIL REST API where the information is stored and visualized.
    </help>
</tool>
